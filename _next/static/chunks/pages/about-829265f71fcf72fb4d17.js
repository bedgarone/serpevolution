(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[521],{1271:function(e,t,s){"use strict";s.d(t,{Z:function(){return n}});var a=s(5893);s(5675);function n(){return(0,a.jsxs)("div",{className:"topBar",children:[(0,a.jsxs)("div",{className:"titleRow d-flex flex-row",children:[(0,a.jsx)("div",{children:"Web"}),(0,a.jsxs)("div",{className:"searchWord d-flex flex-row",children:[(0,a.jsx)("div",{style:{color:"#fff"},children:"S"}),(0,a.jsx)("div",{style:{color:"#EA4335"},children:"e"}),(0,a.jsx)("div",{style:{color:"#FBBC05"},children:"a"}),(0,a.jsx)("div",{style:{color:"#fff"},children:"r"}),(0,a.jsx)("div",{style:{color:"#34A853"},children:"c"}),(0,a.jsx)("div",{style:{color:"#EA4335"},children:"h"})]}),(0,a.jsx)("div",{children:"Engines"})]}),(0,a.jsxs)("div",{className:"queryBar d-flex flex-row",children:[(0,a.jsx)("div",{children:"A study on the evolution of user interfaces"}),(0,a.jsx)("img",{src:"/serpevolution/assets/cross-search.png",alt:"search"})]})]})}},8197:function(e,t,s){"use strict";var a=s(5893),n=s(7294),i=s(9544),r=s(5614),o=s(627),l=s(7243),c=s(3999),h=s(8008);t.Z=function(e){var t=e.pagename,s=(0,n.useState)(!1),d=s[0],u=s[1];return(0,a.jsx)("div",{children:(0,a.jsx)(i.Z,{color:"light",light:!0,expand:"md",children:(0,a.jsxs)("div",{className:"container",children:[(0,a.jsx)(r.Z,{onClick:function(){return u(!d)}}),(0,a.jsx)(o.Z,{isOpen:d,navbar:!0,children:(0,a.jsx)(l.Z,{className:"mr-auto",navbar:!0,children:[["Home","/serpevolution"],["Elements","/serpevolution/elements"],["Patterns","/serpevolution/patterns"],["Timeline","/serpevolution/timeline"],["Layout","/serpevolution/layout"],["Design","/serpevolution/design"],["Dataset","/serpevolution/dataset"],["About","/serpevolution/about"]].map((function(e,s){return(0,a.jsx)(c.Z,{children:(0,a.jsx)(h.Z,{className:t==e[0]?"nav-selected":"",href:e[1],children:e[0]})},s)}))})})]})})})}},6071:function(e,t,s){"use strict";var a=s(3038),n=s(862);t.default=void 0;var i=n(s(7294)),r=s(1689),o=s(2441),l=s(5749),c={};function h(e,t,s,a){if(e&&(0,r.isLocalURL)(t)){e.prefetch(t,s,a).catch((function(e){0}));var n=a&&"undefined"!==typeof a.locale?a.locale:e&&e.locale;c[t+"%"+s+(n?"%"+n:"")]=!0}}var d=function(e){var t=!1!==e.prefetch,s=(0,o.useRouter)(),n=s&&s.asPath||"/",d=i.default.useMemo((function(){var t=(0,r.resolveHref)(n,e.href,!0),s=a(t,2),i=s[0],o=s[1];return{href:i,as:e.as?(0,r.resolveHref)(n,e.as):o||i}}),[n,e.href,e.as]),u=d.href,f=d.as,p=e.children,m=e.replace,g=e.shallow,v=e.scroll,y=e.locale;"string"===typeof p&&(p=i.default.createElement("a",null,p));var x=i.Children.only(p),w=x&&"object"===typeof x&&x.ref,b=(0,l.useIntersection)({rootMargin:"200px"}),j=a(b,2),E=j[0],T=j[1],P=i.default.useCallback((function(e){E(e),w&&("function"===typeof w?w(e):"object"===typeof w&&(w.current=e))}),[w,E]);(0,i.useEffect)((function(){var e=T&&t&&(0,r.isLocalURL)(u),a="undefined"!==typeof y?y:s&&s.locale,n=c[u+"%"+f+(a?"%"+a:"")];e&&!n&&h(s,u,f,{locale:a})}),[f,u,T,y,t,s]);var S={ref:P,onClick:function(e){x.props&&"function"===typeof x.props.onClick&&x.props.onClick(e),e.defaultPrevented||function(e,t,s,a,n,i,o,l){("A"!==e.currentTarget.nodeName||!function(e){var t=e.currentTarget.target;return t&&"_self"!==t||e.metaKey||e.ctrlKey||e.shiftKey||e.altKey||e.nativeEvent&&2===e.nativeEvent.which}(e)&&(0,r.isLocalURL)(s))&&(e.preventDefault(),null==o&&(o=a.indexOf("#")<0),t[n?"replace":"push"](s,a,{shallow:i,locale:l,scroll:o}))}(e,s,u,f,m,g,v,y)},onMouseEnter:function(e){(0,r.isLocalURL)(u)&&(x.props&&"function"===typeof x.props.onMouseEnter&&x.props.onMouseEnter(e),h(s,u,f,{priority:!0}))}};if(e.passHref||"a"===x.type&&!("href"in x.props)){var R="undefined"!==typeof y?y:s&&s.locale,k=s&&s.isLocaleDomain&&(0,r.getDomainLocale)(f,R,s&&s.locales,s&&s.domainLocales);S.href=k||(0,r.addBasePath)((0,r.addLocale)(f,R,s&&s.defaultLocale))}return i.default.cloneElement(x,S)};t.default=d},2025:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return l}});var a=s(5893),n=s(9008),i=s(1271),r=s(8197),o=s(1664);function l(){return(0,a.jsxs)("div",{children:[(0,a.jsxs)(n.default,{children:[(0,a.jsx)("title",{children:"SERP Evolution"}),(0,a.jsx)("meta",{name:"A study on the evolution of user interfaces",content:"Generated by create next app"}),(0,a.jsx)("link",{rel:"icon",href:"/favicon.ico"})]}),(0,a.jsx)(i.Z,{}),(0,a.jsx)(r.Z,{pagename:"About"}),(0,a.jsxs)("div",{className:"container mt-3 d-flex flex-column about-section",children:[(0,a.jsx)("div",{className:"main-title text-center",children:"About the Study"}),(0,a.jsxs)("div",{children:[(0,a.jsx)("div",{className:"about-title",children:"Authors"}),(0,a.jsx)("p",{children:"Bruno Oliveira (brunoedgarero@gmail.com)"}),(0,a.jsx)("p",{children:"Faculty of Engineering of the University of Porto"}),(0,a.jsx)("p",{children:" Supervisor: Carla Teixeira Lopes, PhD (ctl@fe.up.pt)"}),(0,a.jsx)("div",{className:"about-title",children:"Methodology"}),(0,a.jsx)("p",{children:"The first stage of our work involves building a representative sample of SERP interfaces over time. After collecting this sample, our attention focused on its analysis and the automation."}),(0,a.jsx)("div",{className:"d-flex justify-content-center",children:(0,a.jsx)("img",{src:"./assets/method/method_01.png"})}),(0,a.jsx)("h2",{className:"sec-title",children:"What SERP have we captured?"}),(0,a.jsx)("p",{children:"Being Google Search and Microsoft Bing responsible for 95% of the market share, we decided to focus our analysis on this search engine. Although Web search engines are also available on mobile platforms, their interfaces are considerably different from desktop ones. This study will address desktop versions of the first SERP exclusively, from 2000 2020."}),(0,a.jsxs)("p",{children:["The Internet Archive has been keeping snapshots and the respective HTML version of webpages over time. Its collection contains more than 50 billion webpages. Internet Archive provides a standalone HTTP servlet, the ",(0,a.jsx)("em",{children:"Wayback CDX Server API"}),", that allows complex querying, filtering, and analysis of captures. It enables, for example, to obtain the timestamp of captures in a 14 digit format, filtering captures by date (year, month, and day) and URL. While filtering by URL, we can use a wildcard (*) at the end of the URL to specify the latter as a prefix and also receive entries that go beyond the specified URL (e.g.,"," ",(0,a.jsx)("em",{children:"www.google.com/search?q=cookies*"}),")."]}),(0,a.jsxs)("p",{children:["Using the API, we found more than 200 thousand captures of SERP during two decades. This large number of SERP and existing resource restrictions led us to devise a method to identify a smaller, yet representative, set of SERP. Initially, we collected a random sample of SERP over time, but results would retrieve captures that referred to non-usual queries, some of them with non-sense characters and most of them being strangely too restrictive. To assure SERP diversity, we have used a set of 129 most searched queries in the last 20 years, available"," ",(0,a.jsx)(o.default,{href:"/mostsearchedqueries",children:"here"}),". These queries contain relevant terms often searched by users and, consequently, trigger features in SERP. Hence, it is highly likely that SERP interfaces derived from these queries are richer and, thus, more relevant for this study than those generated by random searches. We decided to append these queries with the \u2018*\u2019 wildcard while submitting them to the API to obtain a larger amount of captures."]}),(0,a.jsxs)("p",{children:["Using the most searched queries, we noticed that some years had no captures. In those years, we collected all the available captures. We also noticed that the two last years had a much larger number of captures (>10 thousand). Therefore, in 2019 and 2020, we restricted the URL submitted to the API to those without queries longer than 37 char, the equivalent of 6 words, with an average length of 5 char, and spaces between them. This restriction excludes longer and more specific queries that are probably less useful to the plurality of interfaces. Please check the"," ",(0,a.jsx)(o.default,{href:"/dataset",children:"Dataset"})," page."]}),(0,a.jsx)("h2",{className:"sec-title",children:"How have we captured SERP?"}),(0,a.jsx)("p",{children:"We used Python and Selenium Webdriver, for browser automation, to visit each capture online, check if the capture is valid, save the HTML version, and generate a full screenshot."}),(0,a.jsx)("p",{children:"Not all the captures listed by the API were considered valid, even though being labeled with an OK status code. Some are inexistent, with a contradictory message of URL not captured, and some are defective (e.g., showing incomplete interfaces without search results). To automatically assess the validity of each capture, the program tries to find an organic result, the element that cannot lack in a SERP. Captures from other SERP tabs other than the general first page, identified in the Google's case with the substring \u201ctbm\u201d in the URL, were also discarded for being outside of this work\u2019s scope. A timeout exception is raised after 6 seconds, which means the program will skip that capture, which was the time that was empirically considered sufficient for a valid capture to be fully loaded. Before downloading the page, we still have to remove graphical elements from Internet Archive, such as its information and donation bars. Some captures present other distracting banners, overlapping parts of the interface, such as the ones related to cookie consent. The ones we were able to identify have been incorporated in the removal process."}),(0,a.jsx)("div",{className:"d-flex justify-content-center",children:(0,a.jsx)("img",{src:"./assets/method/method_02.png"})}),(0,a.jsxs)("p",{children:["The existing methods can only access the webpage source code. Thus, to download the source code and the respective files, we used an external library ",(0,a.jsx)("em",{children:"pyautogui"})," to simulate the keyboard keys to trigger the browser\u2019s save function."]}),(0,a.jsx)("p",{children:"The process concludes with the generation of full-height screenshots of every HTML version, opened in another browser instance, in headless mode. Because SERP are responsive to the screen\u2019s size, we produced screenshots considering the most popular screen size at the time of the capture. We only considered the width measure because SERP height is highly variable. According to screen size usage throughout the years, we used the following browser widths: 800px (2000-2002), 1024px (2003-2011), 1366px (2012-2019), 1920px (2020)."}),(0,a.jsx)("p",{children:"The dataset contains all the extracted captures. Each capture is represented by a screenshot, an HTML file, and a files\u2019 folder. We concatenate the initial of the search engine (G/B) with the capture\u2019s timestamp for file naming. The filename ends with a sequential integer \u201c-N\u201d if the timestamp is repeated. For example, \u2018G20070330145203-1\u2019 identifies a second capture from Google by March 30, 2007. The first is identified by \u2018G20070330145203\u2019."}),(0,a.jsx)("h2",{className:"sec-title",children:"How have we analyzed SERP?"}),(0,a.jsxs)("p",{children:["The analysis process included two main stages. In the first, we manually analyzed a set of screenshots to identify SERP elements. We selected the capture with the most features for each month by manually looking at the screenshots of that month\u2019s captures. In a second stage, we automated the detection of these elements over time, allowing the exploration of a larger number of cases. We have analyzed the HTML code of each element found in the previous stage, searching for identifiers. Since elements\u2019 code was frequently changing, it was not possible to list every single identifier that elements might have had, but all the identifiers encountered were logged and are listed in every"," ",(0,a.jsx)(o.default,{href:"/elements",children:"Element"})," page. Element identifiers consist of HTML classes, ids, tags or a combination of these using CSS selectors (e.g., featured snippets: ",(0,a.jsx)("em",{children:"\u2018#knocube\u2019"})," or"," ",(0,a.jsx)("em",{children:"\u2018#res .hp-xpdbox\u2019"}),")."]}),(0,a.jsx)("div",{className:"d-flex justify-content-center",children:(0,a.jsx)("img",{src:"./assets/method/method_03.png"})}),(0,a.jsx)("p",{children:"Finding an element with these identifiers triggers a function that receives the coordinates of the element\u2019s upper-left corner, and its width and height. This function locates the element, generates and saves an image of it in the element\u2019s folder. The capture\u2019s timestamp is stored in a log file that keeps a record of the time of the element\u2019s appearance. Due to the large scale of the dataset, we restricted the image generation to 15 images per month. However, it is possible to change the approach and skip images generation, just to store all the elements\u2019 timestamps in a file. No limit of captures per month is needed as the computation permits a full dataset scan in an acceptable time."}),(0,a.jsx)("p",{children:"Another automation was applied to coloring interfaces according to the position of element categories. Following a similar procedure, the list of identifiers allowed to automatically detect and color targeted areas of the webpage. We used Python, Selenium Webdriver, and BeautifulSoup to scrape every single HTML capture in colored phases to identify and generate transparency-colored images. Due to the size of the dataset, we imposed a limit of 15 elements/captures per month, as in the extraction of elements\u2019 images. The end result of each category is an image that overlays all the individual images from single captures. The high level of transparency will enhance the most common areas at the end while leaving the others almost unnoticeable. The overlaying process uses the upper-left corner as the reference for image alignment. However, the navigation & user inputs category includes elements in and next to the footer, but these common areas were not evident in the result due to how variable the height of the captures can be. In this case, to reproduce the overlapping of every bottom of the interface, the algorithm had to consider a height value of N, cropping the results from the initial pixel (original height minus N) to the lower-left corner (original height), maintaining the original width. Thus, the end result is trimmed at the middle and should be seen as two separate results."})]})]})]})}},8961:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/about",function(){return s(2025)}])},1664:function(e,t,s){e.exports=s(6071)}},function(e){e.O(0,[774,381,888,179],(function(){return t=8961,e(e.s=t);var t}));var t=e.O();_N_E=t}]);